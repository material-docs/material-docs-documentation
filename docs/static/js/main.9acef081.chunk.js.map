{"version":3,"sources":["serviceWorker.js","components/ApiPage.js","pages/APIs/DocsPageAPI/index.js","pages/APIs/DemoWithCodeAPI/index.js","pages/APIs/CodeAPI/index.js","pages/APIs/PagesGroupAPI/index.js","pages/APIs/ImageAPI/index.js","pages/APIs/ListItemAPI/index.js","pages/APIs/ExpansionCodeAPI/index.js","pages/APIs/BlockAPI/index.js","pages/APIs/CodeSpanAPI/index.js","pages/APIs/ItalicAPI/index.js","pages/APIs/ListAPI/index.js","pages/APIs/DocsMenuItemAPI/index.js","pages/APIs/MarkdownAPI/index.js","pages/APIs/TableAPI/index.js","pages/APIs/TableRowAPI/index.js","pages/APIs/TableCellAPI/index.js","pages/APIs/TableBodyAPI/index.js","pages/APIs/TableHeadAPI/index.js","pages/APIs/BoldAPI/index.js","pages/APIs/ListItemContainedAPI/index.js","pages/APIs/DocsPagesAPI/index.js","pages/APIs/DocsMenuAPI/index.js","pages/APIs/DocsLayoutAPI/index.js","pages/APIs/AutoDocsMenuAPI/index.js","pages/APIs/LanguageSelectorAPI/index.js","pages/APIs/SearchFieldAPI/index.js","examples/Lists/SimpleList.js","examples/Lists/ListWithNestedItems.js","examples/Lists/DecoratedList.js","pages/Components/ListsDemo/index.js","pages/GettingStarted/Installation/index.js","pages/Components/LayoutDemo/index.js","pages/MaterialDocsLanding/classes.js","pages/MaterialDocsLanding/index.js","pages/Tutorials/CreatingMaterialDocs/index.js","examples/Headers/AllHeaders.js","pages/Components/HeadersDemo/index.js","examples/Markdown/MarkdownOverview.js","examples/Markdown/ExpansionCodeMD.js","examples/Markdown/DemoWithCodeMD.js","examples/Markdown/CodeMD.js","pages/Components/MarkdownDemo/index.js","examples/TextStyling/TextStylingOverview.js","examples/TextStyling/TextStylingNested.js","pages/Components/TextStylingDemo/index.js","examples/Images/ImagesOverview.js","pages/Components/ImagesDemo/index.js","pages/APIs/TagableAPI/index.js","pages/APIs/H1API/index.js","pages/APIs/H2API/index.js","pages/APIs/H3API/index.js","pages/APIs/H4API/index.js","pages/APIs/H5API/index.js","pages/APIs/H6API/index.js","pages/APIs/HeaderAPI/index.js","Documentation.js","index.js","logo.svg","pages/MaterialDocsLanding/images/MaterialDocsLogoOverview.svg","pages/MaterialDocsLanding/images/back1_v002.png","pages/MaterialDocsLanding/images/demo-screenshot-mobile.png","pages/MaterialDocsLanding/images/demo-screenshot-desktop-1.png","pages/MaterialDocsLanding/images/demo-screenshot-desktop-2.png","examples/Images/images/GithubBannerWide.png"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","datatype","color","purple","code","fontFamily","fontSize","underlined","textDecoration","grey","ApiPage","lang","localeName","importCode","name","searchTags","children","classes","Error","locale","pages","localeSpells","common","spells","componentAPILocale","ComponentAPI","showProps","enableProps","noPropsText","showCss","enableCss","noCssText","searchDescription","pageSearchDescription","noDivider","noTag","pageAbout","Import","language","importDifferenceText","ComponentNameHeader","ComponentNameText","propName","propType","propDefault","propDescription","props","map","prop","key","className","clsx","type","default","description","forwardRef","ref","ruleName","ruleDescription","Object","keys","css","customization","trim","DocsPageAPI","useLang","page","DemoWithCodeAPI","CodeAPI","PagesGroupAPI","ImageAPI","ListItemAPI","ExpansionCodeAPI","BlockAPI","CodeSpanAPI","ItalicAPI","ListAPI","DocsMenuItemAPI","MarkdownAPI","TableAPI","TableRowAPI","TableCellAPI","TableBodyAPI","TableHeadAPI","BoldAPI","ListItemContainedAPI","DocsPagesAPI","DocsMenuAPI","DocsLayoutAPI","AutoDocsMenuAPI","LanguageSelectorAPI","SearchFieldAPI","SimpleList","Fragment","ListWithNestedItems","DecoratedList","SimpleListCode","ListWithNestedItemsCode","DecoratedListCode","ListsDemo","searchLabel","paperContainer","defaultExpanded","Box","p","installCode","MUIInstallationCode","MUIIconsInstallationCode","Installation","SimpleLayoutCode","LayoutWithAutoMenu","LayoutDemo","banner","height","position","display","justifyContent","alignItems","bannerBlock","width","flexWrap","bannerImage","cardBox","card","spacing","background","filled","borderTop","borderBottom","padding","textRegular","footer","palette","white","demoImagesContainer","demoImageBox","breakpoints","down","flexGrow","paddingLeft","paddingRight","demoImage","border","up","getStartedButton","blue","typography","h4","MaterialDocsLanding","switchPage","useSwitchPage","bgImage","strength","src","LogoWide","Button","size","onClick","event","Grid","container","item","xs","Typography","variant","align","Divider","demoScreenshotDesktop1","demoScreenshotMobile","demoScreenshotDesktop2","style","md","Card","CardHeader","avatar","Avatar","title","CardContent","CardActions","sm","href","startCode","pageCode","CreatingMaterialDocs","AllHeaders","AllHeadersCode","HeadersDemo","infoBlock1","headersExample","Provider","value","setTag","removeTag","tags","contentAutoGeneration","tagsInfo","noTagInfo","divider","dividerInfo","noDividerInfo","customAnchors","anchorInfo","markdown","MarkdownOverview","ExpansionCodeMD","HelloWorld","DemoWithCodeMD","data","exampleFunction","CodeMD","MarkdownOverviewCode","expansionCodeBlockExample","demoWithCodeBlockExample","codeBlockExample","codeBlockExamples","demo","MarkdownDemo","overviewExample","moreInfo","moreInfoDetails","deepIntegration","infoBlock2","codeComponents","params","param","TextStylingOverview","TextStylingNested","overviewCode","nestedCode","TextStylingDemo","TextDecoratorsDemo","overview","nesting","nestingInfo","nestedComponents","ImagesOverview","image","alt","fullWidth","ImagesDemo","infoBlock","TagableAPI","H1API","H2API","H3API","H4API","H5API","H6API","HeaderAPI","Documentation","defaultLang","EN","langs","RU","basename","process","logo","keywords","version","actions","icon","link","tooltip","dense","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.9acef081.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {\n    Code,\n    DocsPage,\n    H1,\n    H2,\n    H3,\n    Markdown,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow\n} from \"@material-docs/core\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {grey, purple} from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\n\n\nconst useStyles = makeStyles(theme => ({\n    datatype: {\n        color: purple[800],\n    },\n    code: {\n        fontFamily: \"monospace\",\n        fontSize: \"14px\",\n    },\n    underlined: {\n        textDecoration: `underline dotted ${grey[500]}`,\n    }\n}));\n\nexport default function ApiPage({lang, localeName, importCode, name, searchTags, children, ...props}) {\n    const classes = useStyles();\n    if (!lang) throw new Error(`Documentation: lang is required prop`);\n    if (!localeName) throw new Error(`Documentation: localeName is required prop`);\n\n    const locale = lang.locale.pages[localeName];\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    const showProps = !!locale.enableProps || !!locale.noPropsText;\n    const showCss = !!locale.enableCss || !!locale.noCssText;\n    return (\n        <DocsPage\n            name={name}\n            searchTags={searchTags || locale.searchTags}\n            searchDescription={locale.pageSearchDescription}\n        >\n            <H1 noDivider>{name}</H1>\n            <H3 noDivider noTag>{locale.pageAbout}</H3>\n            <H2>{localeSpells.Import}</H2>\n            <Code language={\"javascript\"} theme={\"darcula\"}>\n                {importCode}\n            </Code>\n            <Markdown>{componentAPILocale.importDifferenceText}</Markdown>\n            <H2>{componentAPILocale.ComponentNameHeader}</H2>\n            <Markdown>{locale.ComponentNameText}</Markdown>\n            {showProps && <H2>Props</H2>}\n            {locale.enableProps &&\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.propName}</TableCell>\n                        <TableCell>{componentAPILocale.propType}</TableCell>\n                        <TableCell>{componentAPILocale.propDefault}</TableCell>\n                        <TableCell>{componentAPILocale.propDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {locale.props.map(prop => (\n                        <TableRow key={prop.name}>\n                            <TableCell className={classes.code}>{prop.name}</TableCell>\n                            <TableCell className={clsx(classes.datatype, classes.code)}>{prop.type}</TableCell>\n                            <TableCell className={clsx(classes.code, classes.underlined)}>{prop.default}</TableCell>\n                            <TableCell>{prop.description}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            }\n            {!locale.enableProps && <Markdown>{locale.noPropsText}</Markdown>}\n            {locale.forwardRef && <Markdown>{componentAPILocale.ref}</Markdown>}\n            {showCss && <H2>CSS</H2>}\n            {locale.enableCss &&\n            <Table>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>{componentAPILocale.ruleName}</TableCell>\n                        <TableCell>{componentAPILocale.ruleDescription}</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {Object.keys(locale.css).map(key => (\n                        <TableRow key={key}>\n                            <TableCell className={classes.code}>{key}</TableCell>\n                            <TableCell>{locale.css[key]}</TableCell>\n                        </TableRow>\n                    ))}\n                </TableBody>\n            </Table>\n            }\n            {!locale.enableCss && <Markdown>{locale.noCssText}</Markdown>}\n            {locale.enableCss &&\n            <Markdown>{componentAPILocale.customization}</Markdown>\n            }\n            {children}\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {DocsPage} from \"@material-docs/core\";\n// or\nimport DocsPage from \"@material-docs/core/components/DocsPage\";\n`.trim();\n\nexport default function DocsPageAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsPageAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DocsPageAPI\"}\n            searchTags={[\"docs\", \"page\", \"api\"]}\n            name={\"DocsPage\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Layout\"]}>Layout</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {DemoWithCode} from \"@material-docs/core\";\n// or\nimport DemoWithCode from \"@material-docs/core/components/DemoWithCode\";\n`.trim();\n\nexport default function DemoWithCodeAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DemoWithCodeAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DemoWithCodeAPI\"}\n            searchTags={[\"demo\", \"with\", \"code\", \"api\", \"showing\", \"code\"]}\n            name={\"DemoWithCode\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Code showing</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Code} from \"@material-docs/core\";\n// or\nimport Code from \"@material-docs/core/components/Code\";\n`.trim();\n\nexport default function CodeAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.CodeAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"CodeAPI\"}\n            searchTags={[\"code\", \"highlight\", \"language\", \"api\"]}\n            name={\"Code\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Code showing</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {PagesGroup} from \"@material-docs/core\";\n// or\nimport PagesGroup from \"@material-docs/core/components/PagesGroup\";\n`.trim();\n\nexport default function PagesGroupAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.PagesGroupAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"PagesGroupAPI\"}\n            searchTags={[\"page\", \"group\", \"gather\", \"container\"]}\n            name={\"PagesGroup\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Lists</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {Image} from \"@material-docs/core\";\n// or\nimport Image from \"@material-docs/core/components/Image\";\n`.trim();\n\nexport default function ImageAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ImageAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ImageAPI\"}\n            searchTags={[\"image\", \"lazy\", \"load\", \"picture\", \"card\", \"banner\", \"logo\"]}\n            name={\"Image\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Text decorators\"]}>Text styling</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {ListItemAPI} from \"@material-docs/core\";\n// or\nimport ListItemAPI from \"@material-docs/core/components/ListItemAPI\";\n`.trim();\n\nexport default function ListItemAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ListItemAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ListItemAPI\"}\n            searchTags={[\"list\", \"item\", \"api\"]}\n            name={\"ListItem\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Lists\"]}>Lists</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {ExpansionCode} from \"@material-docs/core\";\n// or\nimport ExpansionCode from \"@material-docs/core/components/ExpansionCode\";\n`.trim();\n\nexport default function ExpansionCodeAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ExpansionCodeAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ExpansionCodeAPI\"}\n            searchTags={[\"demo\", \"with\", \"code\", \"api\"]}\n            name={\"ExpansionCode\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Code showing</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {Block} from \"@material-docs/core\";\n// or\nimport Block from \"@material-docs/core/components/Block\";\n`.trim();\n\nexport default function BlockAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.BlockAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"BlockAPI\"}\n            searchTags={[\"block\", \"tip\", \"slided\", \"separated\", \"blockquote\", \"quote\"]}\n            name={\"Block\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Text decorators\"]}>Text styling</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {CodeSpan} from \"@material-docs/core\";\n// or\nimport CodeSpan from \"@material-docs/core/components/CodeSpan\";\n`.trim();\n\nexport default function CodeSpanAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.CodeSpanAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"CodeSpanAPI\"}\n            searchTags={[\"code\", \"span\", \"inline\", \"component\", \"block\"]}\n            name={\"CodeSpan\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Text decorators\"]}>Text styling</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {Italic} from \"@material-docs/core\";\n// or\nimport Italic from \"@material-docs/core/components/Italic\";\n`.trim();\n\nexport default function ItalicAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ItalicAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ItalicAPI\"}\n            searchTags={[\"italic\", \"font\", \"text\", \"styling\", \"api\"]}\n            name={\"Italic\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Text decorators\"]}>Text styling</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {List} from \"@material-docs/core\";\n// or\nimport List from \"@material-docs/core/components/List\";\n`.trim();\n\nexport default function ListAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ListAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ListAPI\"}\n            searchTags={[\"list\", \"image\", \"styling\", \"api\"]}\n            name={\"List\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Lists\"]}>Lists</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {DocsMenuItem} from \"@material-docs/core\";\n// or\nimport DocsMenuItem from \"@material-docs/core/components/DocsMenuItem\";\n`.trim();\n\nexport default function DocsMenuItemAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsMenuItemAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DocsMenuItemAPI\"}\n            searchTags={[\"docs\", \"menu\", \"item\", \"api\", \"layout\"]}\n            name={\"DocsMenuItem\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Layout\"]}>Layout</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {Markdown} from \"@material-docs/core\";\n// or\nimport Markdown from \"@material-docs/core/components/Markdown\";\n`.trim();\n\nexport default function MarkdownAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.MarkdownAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"MarkdownAPI\"}\n            searchTags={[\"mark\", \"down\", \"parser\", \"interpret\", \"layout\", \"api\"]}\n            name={\"Markdown\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Markdown\"]}>Markdown</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Table} from \"@material-docs/core\";\n// or\nimport Table from \"@material-docs/core/components/Table\";\n`.trim();\n\nexport default function TableAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TableAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TableAPI\"}\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\"]}\n            name={\"Table\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Tables</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {TableRow} from \"@material-docs/core\";\n// or\nimport TableRow from \"@material-docs/core/components/TableRow\";\n`.trim();\n\nexport default function TableRowAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TableRowAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TableRowAPI\"}\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\"]}\n            name={\"TableRow\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Tables</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {TableCell} from \"@material-docs/core\";\n// or\nimport TableCell from \"@material-docs/core/components/TableCell\";\n`.trim();\n\nexport default function TableCellAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TableCellAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TableCellAPI\"}\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\"]}\n            name={\"TableCell\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Tables</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {TableBody} from \"@material-docs/core\";\n// or\nimport TableBody from \"@material-docs/core/components/TableBody\";\n`.trim();\n\nexport default function TableBodyAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TableBodyAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TableBodyAPI\"}\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\", \"body\"]}\n            name={\"TableBody\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Tables</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {TableHead} from \"@material-docs/core\";\n// or\nimport TableHead from \"@material-docs/core/components/TableHead\";\n`.trim();\n\nexport default function TableHeadAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TableHeadAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TableHeadAPI\"}\n            searchTags={[\"table\", \"cell\", \"row\", \"header\", \"api\", \"head\"]}\n            name={\"TableHead\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Tables</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {Bold} from \"@material-docs/core\";\n// or\nimport Bold from \"@material-docs/core/components/Bold\";\n`.trim();\n\nexport default function BoldAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.BoldAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"BoldAPI\"}\n            searchTags={[\"bold\", \"font\", \"text\", \"styling\", \"api\"]}\n            name={\"Bold\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Text decorators\"]}>Text styling</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {ListItemContained} from \"@material-docs/core\";\n// or\nimport ListItemContained from \"@material-docs/core/components/ListItemContained\";\n`.trim();\n\nexport default function ListItemContainedAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ListItemContainedAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"ListItemContainedAPI\"}\n            searchTags={[\"list\", \"item\", \"contain\", \"api\"]}\n            name={\"ListItemContained\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Lists\"]}>Lists</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {DocsPages} from \"@material-docs/core\";\n// or\nimport DocsPages from \"@material-docs/core/components/DocsPages\";\n`.trim();\n\nexport default function DocsPagesAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsPagesAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DocsPagesAPI\"}\n            searchTags={[\"docs\", \"pages\", \"container\", \"api\"]}\n            name={\"DocsPages\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Layout\"]}>Layout</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {DocsMenu} from \"@material-docs/core\";\n// or\nimport DocsMenu from \"@material-docs/core/components/DocsMenu\";\n`.trim();\n\nexport default function DocsMenuAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsMenuAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DocsMenuAPI\"}\n            searchTags={[\"docs\", \"menu\", \"container\", \"api\"]}\n            name={\"DocsMenu\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Layout\"]}>Layout</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {DocsLayout} from \"@material-docs/core\";\n// or\nimport DocsLayout from \"@material-docs/core/components/DocsLayout\";\n`.trim();\n\nexport default function DocsLayoutAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.DocsLayoutAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"DocsLayoutAPI\"}\n            searchTags={[\"docs\", \"layout\", \"main\", \"component\", \"api\"]}\n            name={\"DocsLayout\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Layout\"]}>Layout</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst importCode = `\nimport {AutoDocsMenu} from \"@material-docs/core\";\n// or\nimport AutoDocsMenu from \"@material-docs/core/components/AutoDocsMenu\";\n`.trim();\n\nexport default function AutoDocsMenuAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.AutoDocsMenuAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"AutoDocsMenuAPI\"}\n            searchTags={[\"auto\", \"menu\", \"docs\", \"system\", \"api\"]}\n            name={\"AutoDocsMenu\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Layout\"]}>Layout</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {LanguageSelector} from \"@material-docs/core\";\n// or\nimport LanguageSelector from \"@material-docs/core/components/LanguageSelector\";\n`.trim();\n\nexport default function LanguageSelectorAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.LanguageSelectorAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"LanguageSelectorAPI\"}\n            searchTags={[\"language\", \"locale\", \"select\", \"api\"]}\n            name={\"LanguageSelector\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Locales</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {Link} from \"@material-ui/core\";\n\nimport {H2, List, ListItem, useLang} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {SearchField} from \"@material-docs/core\";\n// or\nimport SearchField from \"@material-docs/core/components/SearchField\";\n`.trim();\n\nexport default function SearchFieldAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.SearchFieldAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"SearchFieldAPI\"}\n            searchTags={[\"search\", \"engine\", \"selector\", \"results\", \"api\"]}\n            name={\"SearchField\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link>Search</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport List from \"@material-docs/core/components/List\";\nimport ListItem from \"@material-docs/core/components/ListItem\";\nimport {H4} from \"@material-docs/core/components\";\n\nexport default function SimpleList() {\n    return (\n        <React.Fragment>\n            <H4 noTag>Buy</H4>\n            <List>\n                <ListItem>Carrot x3</ListItem>\n                <ListItem>Potato 3kg</ListItem>\n                <ListItem>Apples 1kg</ListItem>\n                <ListItem>Strawberry 1kg</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport List from \"@material-docs/core/components/List\";\nimport ListItem from \"@material-docs/core/components/ListItem\";\nimport ListItemContained from \"@material-docs/core/components/ListItemContained/ListItemContained\";\n\nexport default function ListWithNestedItems() {\n    return (\n        <React.Fragment>\n            <List>\n                <ListItem>\n                    Web\n                    <ListItemContained>\n                        <ListItem>Front-end</ListItem>\n                        <ListItem>Back-end</ListItem>\n                    </ListItemContained>\n                </ListItem>\n                <ListItem>\n                    <ListItemContained>\n                        <ListItem>Engine programmer</ListItem>\n                        <ListItem>Level designer</ListItem>\n                        <ListItem>Character artist</ListItem>\n                    </ListItemContained>\n                    Gamedev\n                </ListItem>\n                <ListItem>Data science</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport List from \"@material-docs/core/components/List\";\nimport ListItem from \"@material-docs/core/components/ListItem\";\n\nexport default function DecoratedList() {\n    return (\n        <React.Fragment>\n            <List>\n                <ListItem type={\"circle\"}>I am list item with circle styling</ListItem>\n                <ListItem type={\"square\"}>I am list item with square styling</ListItem>\n                <ListItem type={\"upper-roman\"}>I am list item with upper-roman styling</ListItem>\n                <ListItem type={\"lower-alpha\"}>I am list item with lower-alpha styling</ListItem>\n                <ListItem type={\"none\"}>I am list item without styling</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport DocsPage from \"@material-docs/core/components/DocsPage/DocsPage\";\nimport {H1, H2, H3} from \"@material-docs/core/components\";\nimport DemoWithCode from \"@material-docs/core/components/DemoWithCode/DemoWithCode\";\nimport SimpleList from \"../../../examples/Lists/SimpleList\";\nimport Box from \"@material-ui/core/Box\";\nimport ListWithNestedItems from \"../../../examples/Lists/ListWithNestedItems\";\nimport DecoratedList from \"../../../examples/Lists/DecoratedList\";\nimport List from \"@material-docs/core/components/List/List\";\nimport ListItem from \"@material-docs/core/components/ListItem/ListItem\";\nimport Markdown from \"@material-docs/core/components/Markdown/Markdown\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst SimpleListCode = `\nimport React from \"react\";\nimport List from \"@material-docs/core/components/List\";\nimport ListItem from \"@material-docs/core/components/ListItem\";\nimport {H4} from \"@material-docs/core/components\";\n\nexport default function SimpleList() {\n    return (\n        <React.Fragment>\n            <H4 noTag>Buy</H4>\n            <List>\n                <ListItem>Carrot x3</ListItem>\n                <ListItem>Potato 3kg</ListItem>\n                <ListItem>Apples 1kg</ListItem>\n                <ListItem>Strawberry 1kg</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}\n`.trim();\n\nconst ListWithNestedItemsCode = `\nimport React from \"react\";\nimport List from \"@material-docs/core/components/List\";\nimport ListItem from \"@material-docs/core/components/ListItem\";\nimport ListItemContained from \"@material-docs/core/components/ListItemContained/ListItemContained\";\n\nexport default function ListWithNestedItems() {\n    return (\n        <React.Fragment>\n            <List>\n                <ListItem>\n                    Web\n                    <ListItemContained>\n                        <ListItem>Front-end</ListItem>\n                        <ListItem>Back-end</ListItem>\n                    </ListItemContained>\n                </ListItem>\n                <ListItem>\n                    <ListItemContained>\n                        <ListItem>Engine programmer</ListItem>\n                        <ListItem>Level designer</ListItem>\n                        <ListItem>Character artist</ListItem>\n                    </ListItemContained>\n                    Gamedev\n                </ListItem>\n                <ListItem>Data science</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}\n`.trim();\n\nconst DecoratedListCode = `\nimport React from \"react\";\nimport List from \"@material-docs/core/components/List\";\nimport ListItem from \"@material-docs/core/components/ListItem\";\n\nexport default function DecoratedList() {\n    return (\n        <React.Fragment>\n            <List>\n                <ListItem type={\"circle\"}>I am list item with circle styling</ListItem>\n                <ListItem type={\"square\"}>I am list item with square styling</ListItem>\n                <ListItem type={\"upper-roman\"}>I am list item with upper-roman styling</ListItem>\n                <ListItem type={\"lower-alpha\"}>I am list item with lower-alpha styling</ListItem>\n                <ListItem type={\"none\"}>I am list item without styling</ListItem>\n            </List>\n        </React.Fragment>\n    );\n}\n`.trim();\n\nexport default function ListsDemo() {\n    return (\n        <DocsPage\n            name={\"Lists\"}\n            searchDescription={\"Demonstration page of lists functional.\"}\n            searchLabel={\"Lists\"}\n            searchTags={[\"lists\", \"demo\", \"tutorial\"]}\n        >\n            <H1>Lists</H1>\n            <H3 noTag noDivider>Lists can be used to show structured information with list items.</H3>\n            <Markdown>\n                For example, you want to show people your TO DO list or list of programs you use. Each ```ListItem```\n                can contain\n                its content and nested list items inside ```ListItemContained``` component.\n            </Markdown>\n            <DemoWithCode code={SimpleListCode} paperContainer theme={\"darcula\"} name={\"Simple list\"} defaultExpanded>\n                <Box p={2}>\n                    <SimpleList/>\n                </Box>\n            </DemoWithCode>\n\n            <Markdown>\n                You can create __nested lists__ inside ```ListItem``` component. Just place __nested items__ inside\n                ```ListItemContained``` component in ```ListItem```.\n            </Markdown>\n            <DemoWithCode code={ListWithNestedItemsCode} paperContainer theme={\"darcula\"}\n                          name={\"List with nested items\"}>\n                <Box p={2}>\n                    <ListWithNestedItems/>\n                </Box>\n            </DemoWithCode>\n\n            <Markdown>Lists can be __decorated__ with several points type.</Markdown>\n            <DemoWithCode code={DecoratedListCode} paperContainer theme={\"darcula\"} name={\"List with items decoration\"}>\n                <Box p={2}>\n                    <DecoratedList/>\n                </Box>\n            </DemoWithCode>\n\n            <H3>APIs</H3>\n            <List>\n                <ListItem><Link page={[\"Component APIs\", \"List\"]}>List</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"ListItem\"]}>ListItem</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"ListItemContained\"]}>ListItemContained</Link></ListItem>\n            </List>\n\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport DocsPage from \"@material-docs/core/components/DocsPage/DocsPage\";\nimport {H1, H2, H3, H4} from \"@material-docs/core/components\";\nimport List from \"@material-docs/core/components/List/List\";\nimport ListItem from \"@material-docs/core/components/ListItem/ListItem\";\nimport Link from \"@material-ui/core/Link\";\nimport Markdown from \"@material-docs/core/components/Markdown/Markdown\";\nimport Code from \"@material-docs/core/components/Code/Code\";\nimport Bold from \"@material-docs/core/components/Bold/Bold\";\n\nconst installCode = `\n// with npm\nnpm install @material-docs/core\n\n// with yarn\nyarn add @material-docs/core\n`.trim();\n\nconst MUIInstallationCode = `\n// with npm\nnpm install @material-ui/core\n\n// with yarn\nyarn add @material-ui/core\n`.trim();\n\nconst MUIIconsInstallationCode = `\n// with npm\nnpm install @material-ui/icons\n\n// with yarn\nyarn add @material-ui/icons\n`.trim();\n\nexport default function Installation() {\n    return (\n        <DocsPage\n            name={\"Installation\"}\n            searchDescription={\"Installation page for MaterialDocs.\"}\n            searchLabel={\"Installation\"}\n            searchTags={[\"installation\", \"getting\", \"started\"]}\n        >\n            <H1>Installation</H1>\n            <H3 noTag noDivider>Install MaterialDocs - framework for creating documentation.</H3>\n            <Markdown>MaterialDocs is available as an [nmp package]()</Markdown>\n            <H2>npm</H2>\n            <Markdown>To install and save in your ```package.json``` dependencies, run:</Markdown>\n            <Code theme={\"darcula\"}>{installCode}</Code>\n            <H2>Material-UI</H2>\n            <Markdown>Note, that __MaterialDocs__ based on [__Material-UI__]() framework. If you want to deeply\n                customize UI, install:</Markdown>\n            <Code theme={\"darcula\"}>{MUIInstallationCode}</Code>\n            <H3>Material-UI Icons</H3>\n            <Markdown>You can access [__Material-UI__]() svg icons by adding to your ```package.json``` next\n                ___package___:</Markdown>\n            <Code theme={\"darcula\"}>{MUIIconsInstallationCode}</Code>\n            <H2>Info</H2>\n            <Markdown>You can start using MaterialDocs with minimal front-end infrastructure. Package providing a lot of\n                components to create great documentation site.</Markdown>\n            <H4>Some steps tu get started</H4>\n            <List>\n                <ListItem>Read <Bold>Components</Bold> tab and get access to demonstration source code.</ListItem>\n                <ListItem>Read <Bold>Component APIs</Bold> tab and get to know how to manipulate with\n                    components.</ListItem>\n                <ListItem>Read <Bold>Tutorials</Bold> tab to get instructions on different topics.</ListItem>\n                <ListItem>Check <Link><Bold>source code on GitHub</Bold></Link> for best code understanding.</ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport DocsPage from \"@material-docs/core/components/DocsPage/DocsPage\";\nimport {H1, H3} from \"@material-docs/core/components\";\nimport Markdown from \"@material-docs/core/components/Markdown/Markdown\";\nimport Code from \"@material-docs/core/components/Code/Code\";\nimport List from \"@material-docs/core/components/List/List\";\nimport ListItem from \"@material-docs/core/components/ListItem/ListItem\";\nimport Link from \"@material-docs/core/components/Link\";\n\nconst SimpleLayoutCode = `\nimport React from \"react\";\nimport {DocsLayout, DocsPages, DocsPage, DocsMenu, DocsMenuItem} from \"@material-docs/core\";\n\nexport default function Documentation() {\n    return (\n        <DocsLayout name=\"Simple docs\">\n            <DocsMenu>\n                <DocsMenuItem textPrimary=\"First Page\" name=\"My first page\"/>\n                <DocsMenuItem textPrimary=\"Second Page\" name=\"This page is cooler than first.\"/>\n            </DocsMenu>\n            <DocsPages>\n                <DocsPage name=\"My first page\">Page content...</DocsPage>\n                <DocsPage name=\"This page is cooler than first.\">Page content...</DocsPage>\n            </DocsPages>\n        </DocsLayout>\n    );\n}\n`.trim();\n\nconst LayoutWithAutoMenu = `\nimport React from \"react\";\nimport {DocsLayout, DocsPages, DocsPage, DocsMenu, DocsMenuItem, PagesGroup, AutoDocsMenu} from \"@material-docs/core\";\n\nexport default function Documentation() {\n    return (\n        <DocsLayout name=\"Docs with auto menu\">\n            <DocsMenu>\n                <AutoDocsMenu/>\n            </DocsMenu>\n            <DocsPages>\n                <PagesGroup name=\"My page group\">\n                    <DocsPage name=\"My first page\">Page content...</DocsPage>\n                    <DocsPage name=\"This page is cooler than first.\">Page content...</DocsPage>                \n                </PagesGroup>\n                <PagesGroup name=\"Another page group\">\n                    <DocsPage name=\"Here we are\">Page content...</DocsPage>\n                    <DocsPage name=\"Riding the sky\">Page content...</DocsPage>                \n                </PagesGroup>\n                <DocsPage name=\"I am in the root group\">Page content...</DocsPage>                \n            </DocsPages>\n        </DocsLayout>\n    );\n}\n`.trim();\n\nexport default function LayoutDemo() {\n    return (\n        <DocsPage\n            name={\"Layout\"}\n            searchDescription={\"Demonstration page of layout functional.\"}\n            searchLabel={\"Layout\"}\n            searchTags={[\"docs\", \"layout\", \"tutorial\", \"page\", \"menu\", \"search\", \"locale\", \"lang\"]}\n        >\n            <H1>Layout</H1>\n            <H3 noTag noDivider>Layout - is a core of MaterialDocs.</H3>\n            <Markdown>\n                ```DocsLayout``` component contains _locale_ information, _search_ context and lot of technical data.\n                __Material Docs__ starts here.\n            </Markdown>\n            <H3 noDivider>Simple layout</H3>\n            <Code theme={\"darcula\"}>\n                {SimpleLayoutCode}\n            </Code>\n            <Markdown>\n                This code shows how to create simple layout. __Page names__ will be automatically converted to\n                __routes__, so give normal name for pages.\n                ```DocsMenuItem``` prop ___name___ is a page identifier.\n            </Markdown>\n            <H3 noDivider>Layout with auto menu</H3>\n            <Code theme={\"darcula\"}>{LayoutWithAutoMenu}</Code>\n            <Markdown>\n                Here is ```DocsLayout``` with automated menu. You can add __pages__ and __groups__ in other __groups__\n                to create\n                hierarchical menu structure.\n            </Markdown>\n            <H3 noDivider>More info</H3>\n            <Markdown>\n                You can learn more about creating material docs in [this guide]().\n            </Markdown>\n            <H3>APIs</H3>\n            <List>\n                <ListItem><Link page={[\"Component APIs\", \"DocsLayout\"]}>DocsLayout</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"DocsPage\"]}>DocsPage</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"DocsPages\"]}>DocsPages</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"DocsMenu\"]}>DocsMenu</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"DocsMenuItem\"]}>DocsMenuItem</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"AutoDocsMenu\"]}>AutoDocsMenu</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport grey from \"@material-ui/core/colors/grey\";\nimport blue from \"@material-ui/core/colors/blue\";\n\nexport const useStyles = makeStyles(theme => ({\n    banner: {\n        height: \"100vh\",\n        position: \"relative\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    bannerBlock: {\n        width: \"70%\",\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexWrap: \"wrap\",\n    },\n    bannerImage: {\n        width: \"100%\",\n    },\n    cardBox: {\n        height: \"100%\",\n    },\n    card: {\n        height: `calc(100% - ${theme.spacing(4)}px)`,\n        background: grey[100],\n    },\n    filled: {\n        background: \"rgba(255, 255, 255, 1)\",\n        borderTop: `2px solid ${grey[200]}`,\n        borderBottom: `2px solid ${grey[200]}`,\n        padding: theme.spacing(1),\n    },\n    textRegular: {\n        fontSize: 20,\n    },\n    footer: {\n        background: grey[900],\n        borderTop: `${theme.spacing(1)}px solid ${grey[800]}`,\n        borderBottom: 0,\n        color: grey[500],\n        \"& a\": {\n            color: theme.palette.common.white,\n        }\n    },\n    demoImagesContainer: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    demoImageBox: {\n        display: \"inline-block\",\n        [theme.breakpoints.down(\"md\")]: {\n            flexGrow: 1,\n            paddingLeft: theme.spacing(3),\n            paddingRight: theme.spacing(3),\n        },\n    },\n    demoImage: {\n        border: `2px solid ${grey[200]}`,\n        [theme.breakpoints.down(\"md\")]: {\n            height: \"auto\",\n            width: \"100%\",\n        },\n        [theme.breakpoints.up(\"md\")]: {\n            height: 200,\n        }\n    },\n    getStartedButton: {\n        color: blue[100],\n        fontSize: theme.typography.h4.fontSize,\n    }\n}));","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {useStyles} from \"./classes\";\nimport LogoWide from \"./images/MaterialDocsLogoOverview.svg\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Card from \"@material-ui/core/Card\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Code from \"@material-docs/core/components/Code/Code\";\nimport Button from \"@material-ui/core/Button\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport {Parallax} from \"react-parallax\";\nimport background from \"./images/back1_v002.png\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport Link from \"@material-docs/core/components/Link/Link\";\nimport Bold from \"@material-docs/core/components/Bold/Bold\";\nimport clsx from \"clsx\";\nimport demoScreenshotMobile from \"./images/demo-screenshot-mobile.png\";\nimport demoScreenshotDesktop1 from \"./images/demo-screenshot-desktop-1.png\";\nimport demoScreenshotDesktop2 from \"./images/demo-screenshot-desktop-2.png\";\nimport Divider from \"@material-ui/core/Divider\";\nimport useSwitchPage from \"@material-docs/core/hooks/useSwitchPage\";\n\nexport default function MaterialDocsLanding() {\n    const classes = useStyles();\n    const {switchPage} = useSwitchPage();\n    return (\n        <React.Fragment>\n            <Parallax\n                bgImage={background}\n                strength={1000}\n            >\n                <Box className={classes.banner}>\n                    <Box\n                        className={classes.bannerBlock}\n                    >\n                        <img src={LogoWide} className={classes.bannerImage}/>\n                        <Button\n                            size={\"large\"}\n                            className={classes.getStartedButton}\n                            onClick={event => {debugger; switchPage([\"Getting started\", \"Installation\"])}}\n                        >\n                            Get started\n                        </Button>\n                    </Box>\n                </Box>\n                <Grid container>\n                    <Grid item xs={12} className={classes.filled}>\n                        <Box p={2}>\n                            <Typography variant={\"h3\"} align={\"center\"}>\n                                What is Material Docs\n                            </Typography>\n                            <Typography align={\"center\"} className={classes.textRegular}>\n                                Material Docs is a powerful framework that allows you to quickly and easily create\n                                websites with documentation.\n                            </Typography>\n                            <Divider/>\n                            <Box className={classes.demoImagesContainer}>\n                                <Box className={classes.demoImageBox} p={1}>\n                                    <img src={demoScreenshotDesktop1} className={classes.demoImage}/>\n                                </Box>\n                                <Box className={classes.demoImageBox} p={1}>\n                                    <img src={demoScreenshotMobile} className={classes.demoImage}/>\n                                </Box>\n                                <Box className={classes.demoImageBox} p={1}>\n                                    <img src={demoScreenshotDesktop2} className={classes.demoImage}/>\n                                </Box>\n                            </Box>\n                        </Box>\n                    </Grid>\n                    <Grid item xs={12} style={{height: 200}}/>\n                    <Grid item xs={12} className={classes.filled}>\n                        <Grid container>\n                            <Grid item xs={12}>\n                                <Box p={2}>\n                                    <Typography variant={\"h4\"} align={\"center\"}>\n                                        Why Material Docs\n                                    </Typography>\n                                    <Typography align={\"center\"} className={classes.textRegular}>\n                                        Material Docs we use the principles of material design in our project to make the design\n                                        as intuitive and simple as possible.<br/>\n                                        Your documentation can be compiled for hosts like\n                                        GitHub pages and more fancy.\n                                    </Typography>\n                                    <Divider/>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <Box p={2} className={classes.cardBox}>\n                                    <Card className={classes.card}>\n                                        <CardHeader\n                                            avatar={\n                                                <Avatar><GetAppIcon/></Avatar>\n                                            }\n                                            title={<Typography variant={\"h6\"}>Installation</Typography>}\n                                        />\n                                        <CardContent>\n                                            <Typography>Install MaterialDocs's source files via npm.</Typography>\n                                            <Code theme={\"darcula\"}>$ npm install @material-docs/core</Code>\n                                            <Typography>Also we recommend to use this framework with Material-UI for best\n                                                experience. But it is optional.</Typography>\n                                            <Code\n                                                theme={\"darcula\"}>{\"$ npm install @material-ui/core\\n$ npm install @material-ui/icons\"}</Code>\n                                            <CardActions>\n                                                <Button onClick={() => switchPage([\"Getting started\", \"Installation\"])}>\n                                                    Read installation docs\n                                                </Button>\n                                            </CardActions>\n                                        </CardContent>\n                                    </Card>\n                                </Box>\n                            </Grid>\n                            <Grid item xs={12} md={6}>\n                                <Box p={2} className={classes.cardBox}>\n                                    <Card className={classes.card}>\n                                        <CardHeader\n                                            avatar={\n                                                <Avatar><GetAppIcon/></Avatar>\n                                            }\n                                            title={<Typography variant={\"h6\"}>Installation</Typography>}\n                                        />\n                                        <CardContent>\n                                            <Typography>MaterialDocs components work without any additional setup, and don't\n                                                pollute\n                                                the global scope.</Typography>\n                                            <Code theme={\"darcula\"}>$ npm install @material-docs/core</Code>\n                                            <CardActions>\n                                                <Button onClick={event => switchPage([\"Tutorials\", \"Creating Material Docs\"])}>\n                                                    Explore the docs\n                                                </Button>\n                                            </CardActions>\n                                        </CardContent>\n                                    </Card>\n                                </Box>\n                            </Grid>\n                        </Grid>\n                    </Grid>\n                    <Grid item xs={12} style={{height: 200}}/>\n                    <Grid item xs={12} className={clsx(classes.filled, classes.footer)}>\n                        <Box p={2}>\n                            <Grid container>\n                                <Grid item xs={12} sm={6} md={3}>\n                                    <List>\n                                        <ListItem>\n                                            <Bold>DOCUMENTATION</Bold>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link page={[\"Getting started\", \"Installation\"]}>Installation</Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link page={[\"Getting started\", \"Installation\"]}>Overview</Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link page={[\"Components\", \"Layout\"]}>Components</Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link page={[\"Tutorials\", \"Creating Material Docs\"]}>Tutorials</Link>\n                                        </ListItem>\n                                    </List>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={3}>\n                                    <List>\n                                        <ListItem>\n                                            <Bold>BASED ON</Bold>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"https://material-ui.com/\"}>\n                                                Material-UI\n                                            </Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"https://reactjs.org/\"}>\n                                                React\n                                            </Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"https://marked.js.org/\"}>\n                                                marked\n                                            </Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"https://github.com/DanilAndreev/routing-manager/wiki\"}>\n                                                routing-manager\n                                            </Link>\n                                        </ListItem>\n                                    </List>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={3}>\n                                    <List>\n                                        <ListItem>\n                                            <Bold>SOURCES</Bold>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"https://github.com/DanilAndreev/material-docs\"}>GitHub\n                                                repository</Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"https://www.npmjs.com/package/@material-docs/core\"}>npm\n                                                package</Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"https://github.com/DanilAndreev/material-docs/projects/2\"}>Project\n                                                board</Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link\n                                                href={\"https://github.com/DanilAndreev/material-docs/blob/master/README.md\"}>Readme</Link>\n                                        </ListItem>\n                                    </List>\n                                </Grid>\n                                <Grid item xs={12} sm={6} md={3}>\n                                    <List>\n                                        <ListItem>\n                                            <Bold>FEEDBACK</Bold>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"mailto: help.materialdocs@gmail.com\"}>\n                                                help.materialdocs@gmail.com\n                                            </Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"https://github.com/DanilAndreev\"}>My GitHub</Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"https://github.com/DanilAndreev/material-docs/issues\"}>\n                                                Issues and bugs\n                                            </Link>\n                                        </ListItem>\n                                        <ListItem>\n                                            <Link href={\"https://github.com/DanilAndreev/material-docs/pulls\"}>\n                                                If you want to help\n                                            </Link>\n                                        </ListItem>\n                                    </List>\n                                </Grid>\n                            </Grid>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </Parallax>\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport DocsPage from \"@material-docs/core/components/DocsPage/DocsPage\";\nimport {H1, H2, H3} from \"@material-docs/core/components\";\nimport Markdown from \"@material-docs/core/components/Markdown/Markdown\";\nimport List from \"@material-docs/core/components/List/List\";\nimport ListItem from \"@material-docs/core/components/ListItem/ListItem\";\nimport ListItemContained from \"@material-docs/core/components/ListItemContained/ListItemContained\";\nimport Block from \"@material-docs/core/components/Block/Block\";\nimport Code from \"@material-docs/core/components/Code/Code\";\n\nconst startCode = `\nimport React from \"react\";\nimport DocsLayout from \"@material-docs/core/layout\";\nimport DocsMenu from \"@material-docs/core/components/DocsMenu\";\nimport DocsPages from \"@material-docs/core/components/DocsPages\";\n\nfunction MyMaterialDocs() {\n    return (\n        <DocsLayout\n            name=\"Test documentation\"\n            version=\"1.0.0\"\n            logo=\"logo_path\"\n            keywords={[\"my\", \"example\", \"documentation\"]}\n            author=\"Me\"\n        >\n            <DocsMenu>\n            </DocsMenu>\n            <DocsPages>\n            </DocsPages>\n        </DocsLayout>\n    );\n}\n`.trim();\n\nconst pageCode = `\nimport React from \"react\";\nimport DocsPage from \"@material-docs/core/components/DocsPage\";\n\nfunction PageAboutMe() {\n    return(\n        <DocsPage\n            \n        >\n            <H1>My name is Danil Andreev</H1>\n            <Markdown>I am 19 years old. I am __3D artist__ and __programmer__. </Markdown>\n            \n            \n        </DocsPage>\n    );\n} \n`.trim();\n\nexport default function CreatingMaterialDocs() {\n    return (\n        <DocsPage\n            name={\"Creating Material Docs\"}\n            searchTags={[\"create\", \"material\", \"docs\", \"tutorial\", \"faq\", \"manual\"]}\n            searchLabel={\"Creating Material Docs\"}\n        >\n            <H1 noDivider>Creating Material Docs</H1>\n            кртинка документации\n            <H3 noDivider noTag>In this article you will get to know basics of Material Docs workflow</H3>\n            <H2 noDivider>Введение</H2>\n            <Markdown>\n                Для начала, давайте разберемся из чего состоит __макет__ документации.\n                В Material Docs фреймворке реализована страничная логика. Это означает, что информация хранится на\n                отдельных смысловых страницах, которые могут быть обьеденены в смысловые группы.\n                Также, на странице информация может быть разделена с помощью заголовков и описана с помощью\n                интерактивных компонентов,\n                таких как: списки, таблицы, блоки кода и им подобные.\n                Структура модет выглядеть, к примеру, вот так:\n            </Markdown>\n            <List>\n                <ListItem>\n                    Web\n                    <ListItemContained>\n                        <ListItem type={\"square\"}>\n                            Design\n                            <ListItemContained>\n                                <ListItem type={\"upper-roman\"}>What is web design</ListItem>\n                                <ListItem type={\"upper-roman\"}>Popular software for creating design.</ListItem>\n                                <ListItem type={\"upper-roman\"}>Best design schools</ListItem>\n                            </ListItemContained>\n                        </ListItem>\n                        <ListItem type={\"square\"}>\n                            Scripting\n                            <ListItemContained>\n                                <ListItem type={\"upper-roman\"}>Where scripts are used</ListItem>\n                                <ListItem type={\"upper-roman\"}>Javascript</ListItem>\n                                <ListItem type={\"upper-roman\"}>About ES6</ListItem>\n                            </ListItemContained>\n                        </ListItem>\n                    </ListItemContained>\n                </ListItem>\n                <ListItem>\n                    Game dev\n                    <ListItemContained>\n                        <ListItem type={\"square\"}>\n                            3D Artist\n                            <ListItemContained>\n                                <ListItem type={\"upper-roman\"}>Who are 3D artists?</ListItem>\n                                <ListItem type={\"upper-roman\"}>Creating stylized game character</ListItem>\n                                <ListItem type={\"upper-roman\"}>Houdini VFX with games</ListItem>\n                            </ListItemContained>\n                        </ListItem>\n                        <ListItem type={\"square\"}>\n                            Programming\n                            <ListItemContained>\n                                <ListItem type={\"upper-roman\"}>Pros and cons of programming for games</ListItem>\n                                <ListItem type={\"upper-roman\"}>Popular game engines</ListItem>\n                                <ListItem type={\"upper-roman\"}>About real time rendering</ListItem>\n                            </ListItemContained>\n                        </ListItem>\n                    </ListItemContained>\n                </ListItem>\n            </List>\n            <Block>Где круг - группа, квадрат - страница, латинская цифра - заголовок.</Block>\n            <H2>Начнем кодить</H2>\n            <Markdown>Создадим документацию о себе. </Markdown>\n            <H3 noDivider>Настройка ядра</H3>\n            <Markdown>В первую очередь, необходимо создать корневой элемент Material Docs и настроить его:</Markdown>\n            <Code theme={\"darcula\"}>{startCode}</Code>\n            <Markdown>\n                Мы успешно настроили ядро Material Docs. в ```DocsLayout``` была передана служебная информация,\n                такая как: название, версия, автор...\n            </Markdown>\n            <H3>Создание страницы</H3>\n            <Markdown>\n                Теперь, давайте создадим страницу. Страница может хранить любую информацию.\n                Для удобства - используйте заголовки, чтобы разделить страницу на смысловые блоки.\n            </Markdown>\n            <Code theme={\"darcula\"}>{pageCode}</Code>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {H1, H2, H3, H4, H5, H6} from \"@material-docs/core/components\";\n\nexport default function AllHeaders() {\n    return (\n        <React.Fragment>\n            <H1> I am H1 header. I am the biggest.</H1>\n            <H2> I am H2 header. I am so pretty.</H2>\n            <H3> I am H3 header.</H3>\n            <H4> I am H4 header. I have no underline.</H4>\n            <H5> I am H5 header. Also I don't create item in page navigation list.</H5>\n            <H6> I am H6 header. I am the smallest.</H6>\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport DocsPage from \"@material-docs/core/components/DocsPage/DocsPage\";\nimport React from \"react\";\nimport {H1, H2, H3} from \"@material-docs/core/components\";\nimport Markdown from \"@material-docs/core/components/Markdown/Markdown\";\nimport DemoWithCode from \"@material-docs/core/components/DemoWithCode/DemoWithCode\";\nimport {TaggingContext} from \"@material-docs/core/hooks/useTags\";\nimport AllHeaders from \"../../../examples/Headers/AllHeaders\";\nimport Code from \"@material-docs/core/components/Code/Code\";\nimport Box from \"@material-ui/core/Box\";\nimport useLang from \"@material-docs/core/hooks/useLang/useLang\";\nimport List from \"@material-docs/core/components/List/List\";\nimport ListItem from \"@material-docs/core/components/ListItem/ListItem\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst AllHeadersCode = `\nimport React from \"react\";\nimport {\n    H1,\n    H2,\n    H3,\n    H4,\n    H5,\n    H6\n} from \"@material-docs/core/components\";\n\nexport default function AllHeaders() {\n    return (\n        <div style={{padding: \"20px\"}}>\n            <H1> I am H1 header. I am the biggest.</H1>\n            <H2> I am H2 header. I am so pretty.</H2>\n            <H3> I am H3 header.</H3>\n            <H4> I am H4 header. I have no underline.</H4>\n            <H5> I am H5 header. Also I don't create item in page navigation list.</H5>\n            <H6> I am H6 header. I am the smallest.</H6>\n        </div>\n    );\n}\n`.trim();\n\nexport default function HeadersDemo() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.HeadersDemo;\n    return (\n        <DocsPage\n            name={\"Headers\"}\n            searchDescription={\"Headers\"}\n            searchLabel={\"Headers demonstration page.\"}\n            keys={[\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"typography\", \"header\", \"caption\", \"big\", \"text\"]}\n        >\n            <H1>Headers</H1>\n            <H3 noTag noDivider>{locale.pageAbout}</H3>\n            <H2>Overview</H2>\n            <Markdown> {locale.infoBlock1} </Markdown>\n            <DemoWithCode\n                paperContainer\n                code={AllHeadersCode}\n                theme={\"darcula\"}\n                defaultExpanded\n                name={locale.headersExample}\n            >\n                <Box p={2}>\n                    <TaggingContext.Provider value={{\n                        setTag: () => {\n                        }, removeTag: () => {\n                        }, tags: {}\n                    }}>\n                        <AllHeaders/>\n                    </TaggingContext.Provider>\n                </Box>\n            </DemoWithCode>\n            <H2>Settings</H2>\n            <H3 noDivider>{locale.contentAutoGeneration}</H3>\n            <Markdown> {locale.tagsInfo} </Markdown>\n            <Code theme={\"darcula\"}>\n                {`return(\\n    <H1 noTag>I am H1 header than not generates navigation tags!</H1>\\n)`}\n            </Code>\n            <Markdown>{locale.noTagInfo}</Markdown>\n            <H3 noDivider>{locale.divider}</H3>\n            <Markdown>{locale.dividerInfo}</Markdown>\n            <Code theme={\"darcula\"}>\n                {`return(\\n    <H1 noDivider>I am H1 without divider at the bottom!</H1>\\n)`}\n            </Code>\n            <Markdown>{locale.noDividerInfo}</Markdown>\n            <H3 noDivider>{locale.customAnchors}</H3>\n            <Markdown> {locale.anchorInfo} </Markdown>\n            <Code theme={\"darcula\"}>\n                {`return(\\n    <H1 id=\"i-am-the-best-one\">I am H1 with custom anchor!</H1>\\n)`}\n            </Code>\n            <H3>APIs</H3>\n            <List>\n                <ListItem><Link page={[\"Component APIs\", \"Header\"]}>Header</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"H1\"]}>H1</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"H2\"]}>H2</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"H3\"]}>H3</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"H4\"]}>H4</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"H5\"]}>H5</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"H6\"]}>H6</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport Markdown from \"@material-docs/core/components/Markdown\";\n\nconst markdown = `\n# This is an overview markdown example\n### It generated from markdown text and rendered using Material Docs elements\n> You can change styling by providing theme overrides!\n\n| Hello darkness my old friend     | Здравствуй, ночь, моя старая подруга! |\n|----------------------------------|---------------------------------------|\n| I've come to talk with you again | Я пришел снова побеседовать с тобой   |\n`.trim();\n\nexport default function MarkdownOverview() {\n    return (\n        <Markdown>\n            {markdown}\n        </Markdown>\n    );\n}\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport Markdown from \"@material-docs/core/components/Markdown\";\n\nconst markdown = `\n\\`\\`\\`{\"type\": \"expansion-code\", \"theme\": \"darcula\", \"name\": \"ExpansionCode in markdown\"}\nimport React from \"react\";\n\nfunction test() {\n    console.log(\"I am function in expansion code element.\");\n    return null;\n}\n\\`\\`\\`\n`.trim();\n\nexport default function ExpansionCodeMD() {\n    return (\n        <Markdown>\n            {markdown}\n        </Markdown>\n    );\n}\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport Markdown from \"@material-docs/core/components/Markdown\";\n\nfunction HelloWorld() {\n    return (\n        <div>\n            <h1>Hello darkness my old friend</h1>\n        </div>\n    );\n}\n\nconst markdown = `\n\\`\\`\\`{\"type\": \"demo-with-code\", \"theme\": \"darcula\", \"name\": \"DemoWithCode in markdown\", \"demo\": \"exampleFunction\"}\nimport React from \"react\";\n\nfunction HelloWorld() {\n    return (\n        <div>\n            <h1>Hello darkness my old friend</h1>\n        </div>\n    );\n}\n\\`\\`\\`\n`.trim();\n\nexport default function DemoWithCodeMD() {\n    return (\n        <Markdown data={{exampleFunction: <HelloWorld/>}}>\n            {markdown}\n        </Markdown>\n    );\n}\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport Markdown from \"@material-docs/core/components/Markdown\";\n\nconst markdown = `\n\\`\\`\\`{\"type\": \"code\", \"theme\": \"darcula\"}\nimport React from \"react\";\n\nfunction test() {\n    console.log(\"I am function in code element.\");\n    return null;\n}\n\\`\\`\\`\n`.trim();\n\nexport default function CodeMD() {\n    return (\n        <Markdown>\n            {markdown}\n        </Markdown>\n    );\n}\n","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport DocsPage from \"@material-docs/core/components/DocsPage/DocsPage\";\nimport React from \"react\";\nimport {H1, H2, H3} from \"@material-docs/core/components\";\nimport DemoWithCode from \"@material-docs/core/components/DemoWithCode/DemoWithCode\";\nimport MarkdownOverview from \"../../../examples/Markdown/MarkdownOverview\";\nimport {TaggingContext} from \"@material-docs/core/hooks/useTags\";\nimport Box from \"@material-ui/core/Box\";\nimport Markdown from \"@material-docs/core/components/Markdown/Markdown\";\nimport useLang from \"@material-docs/core/hooks/useLang/useLang\";\nimport Table from \"@material-docs/core/components/Table/Table\";\nimport {TableBody, TableCell, TableHead, TableRow} from \"@material-docs/core\";\nimport CodeSpan from \"@material-docs/core/components/CodeSpan/CodeSpan\";\nimport Block from \"@material-docs/core/components/Block/Block\";\nimport Bold from \"@material-docs/core/components/Bold/Bold\";\nimport ExpansionCodeMD from \"../../../examples/Markdown/ExpansionCodeMD\";\nimport DemoWithCodeMD from \"../../../examples/Markdown/DemoWithCodeMD\";\nimport CodeMD from \"../../../examples/Markdown/CodeMD\";\nimport List from \"@material-docs/core/components/List/List\";\nimport ListItem from \"@material-docs/core/components/ListItem/ListItem\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst MarkdownOverviewCode = `\nimport React from \"react\";\nimport Markdown from \"@material-docs/core/components/Markdown\";\n\nconst markdown = \\`\n# This is an overview markdown example\n### It generated from markdown text and rendered using Material Docs elements\n> You can change styling by providing theme overrides!\n\n| Hello darkness my old friend     | Здравствуй, ночь, моя старая подруга! |\n|----------------------------------|---------------------------------------|\n| I've come to talk with you again | Я пришел снова побеседовать с тобой   |\n\\`.trim();\n\nexport default function MarkdownOverview() {\n    return (\n        <Markdown>\n            {markdown}\n        </Markdown>\n    );\n}\n`.trim();\n\n\nconst expansionCodeBlockExample = `\nimport React from \"react\";\nimport Markdown from \"@material-docs/core/components/Markdown\";\n\nconst markdown = \\`\n\\\\\\`\\\\\\`\\\\\\`{\"type\": \"expansion-code\", \"theme\": \"darcula\", \"name\": \"ExpansionCode in markdown\"}\nimport React from \"react\";\n\nfunction test() {\n    console.log(\"I am function in expansion code element.\");\n    return null;\n}\n\\\\\\`\\\\\\`\\\\\\`\n\\`.trim();\n\nexport default function MarkdownOverview() {\n    return (\n        <Markdown>\n            {markdown}\n        </Markdown>\n    );\n}\n`.trim();\n\nconst demoWithCodeBlockExample = `\nimport React from \"react\";\nimport Markdown from \"@material-docs/core/components/Markdown\";\n\nfunction HelloWorld() {\n    return (\n        <div>\n            <h1>Hello darkness my old friend</h1>\n        </div>\n    );\n}\n\nconst markdown = \\`\n\\\\\\`\\\\\\`\\\\\\`\n{\n    \"type\"\n:\n    \"demo-with-code\", \"theme\"\n:\n    \"darcula\", \"name\"\n:\n    \"DemoWithCode in markdown\", \"demo\"\n:\n    \"exampleFunction\"\n}\nimport React from \"react\";\n\nfunction HelloWorld() {\n    return (\n        <div>\n            <h1>Hello darkness my old friend</h1>\n        </div>\n    );\n}\n\\\\\\`\\\\\\`\\\\\\`\n\\`.trim();\n\nexport default function DemoWithCodeMD() {\n    return (\n        <Markdown data={{exampleFunction: <HelloWorld/>}}>\n            {markdown}\n        </Markdown>\n    );\n}\n`.trim();\n\nconst codeBlockExample = `\nimport React from \"react\";\nimport Markdown from \"@material-docs/core/components/Markdown\";\n\nconst markdown = \\`\n\\\\\\`\\\\\\`\\\\\\`{\"type\": \"code\", \"theme\": \"darcula\"}\nimport React from \"react\";\n\nfunction test() {\n    console.log(\"I am function in code element.\");\n    return null;\n}\n\\\\\\`\\\\\\`\\\\\\`\n\\`.trim();\n\nexport default function CodeMD() {\n    return (\n        <Markdown>\n            {markdown}\n        </Markdown>\n    );\n}\n\n`.trim();\n\n\nconst codeBlockExamples = {\n    \"expansion-code\": {code: expansionCodeBlockExample, demo: <ExpansionCodeMD/>},\n    \"demo-with-code\": {code: demoWithCodeBlockExample, demo: <DemoWithCodeMD/>},\n    \"code\": {code: codeBlockExample, demo: <CodeMD/>},\n}\n\nexport default function MarkdownDemo() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.MarkdownDemo;\n\n    return (\n        <DocsPage\n            name={\"Markdown\"}\n            searchDescription={\"Markdown - component, designed to convert text in markdown notation to Material Docs.\"}\n            searchLabel={\"Markdown\"}\n            searchTags={[\"markdown\", \"interpreter\", \"parser\", \"generator\", \"demo\"]}\n        >\n            <H1>Markdown</H1>\n            <H3 noTag noDivider>{locale.pageAbout}</H3>\n            <Markdown>{locale.infoBlock1}</Markdown>\n            <DemoWithCode\n                code={MarkdownOverviewCode}\n                theme={\"darcula\"}\n                paperContainer\n                defaultExpanded\n                name={locale.overviewExample}\n            >\n                <Box p={2}>\n                    <TaggingContext.Provider value={{\n                        setTag: () => {\n                        }, removeTag: () => {\n                        }, tags: {}\n                    }}>\n                        <MarkdownOverview/>\n                    </TaggingContext.Provider>\n                </Box>\n            </DemoWithCode>\n            <H2>{locale.moreInfo}</H2>\n            <Markdown>{locale.moreInfoDetails}</Markdown>\n            <H2>{locale.deepIntegration}</H2>\n            <Markdown>{locale.infoBlock2}</Markdown>\n            {locale.codeComponents.map(item => {\n                const demo = codeBlockExamples[item.key];\n                return (\n                    <React.Fragment key={item.key}>\n                        <H3 noTag={false}>{item.name}</H3>\n                        {item.description && <Markdown>{item.description}</Markdown>}\n                        {demo &&\n                        <DemoWithCode\n                            code={demo.code}\n                            theme={\"darcula\"}\n                            paperContainer\n                        >\n                            <Box p={2}>\n                                <TaggingContext.Provider value={{\n                                    setTag: () => {\n                                    }, removeTag: () => {\n                                    }, tags: {}\n                                }}>\n                                    {demo.demo}\n                                </TaggingContext.Provider>\n                            </Box>\n                        </DemoWithCode>\n                        }\n                        <Block><Bold>Key</Bold> - <CodeSpan>{item.key}</CodeSpan></Block>\n                        <Table>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell>Name</TableCell>\n                                    <TableCell>Description</TableCell>\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {item.params.map(param => (\n                                    <TableRow key={param.name}>\n                                        <TableCell><CodeSpan>{param.name}</CodeSpan></TableCell>\n                                        <TableCell>{param.description}</TableCell>\n                                    </TableRow>\n                                ))}\n                            </TableBody>\n                        </Table>\n                    </React.Fragment>\n                )\n            })}\n            <H3>APIs</H3>\n            <List>\n                <ListItem><Link page={[\"Component APIs\", \"Markdown\"]}>Markdown</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport Bold from \"@material-docs/core/components/Bold\";\nimport Italic from \"@material-docs/core/components/Italic\";\nimport Block from \"@material-docs/core/components/Block\";\nimport CodeSpan from \"@material-docs/core/components/CodeSpan\";\n\nexport default function TextStylingOverview() {\n    return (\n        <React.Fragment>\n            This is a <Bold>bold text</Bold> near <Italic>italic text</Italic> inside my line. <br/>\n            And me is <Italic><Bold>bold italic text</Bold></Italic>\n            <Block>I am text in <CodeSpan>{\"<Block/>\"}</CodeSpan> component. </Block>\n            Lets see on prev code line via inline code block\n            <CodeSpan>{\"<Block>I am text in <CodeSpan>{\\\"<Block/>\\\"}</CodeSpan> component. </Block>\"}</CodeSpan>\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport Bold from \"@material-docs/core/components/Bold\";\nimport Italic from \"@material-docs/core/components/Italic\";\nimport Block from \"@material-docs/core/components/Block\";\nimport CodeSpan from \"@material-docs/core/components/CodeSpan\";\n\nexport default function TextStylingNested() {\n    return (\n        <React.Fragment>\n            I <Bold> am an <Italic>italic text inside</Italic> bold component.</Bold><br/><br/>\n            <Block>I am a <CodeSpan>Block</CodeSpan> with <Italic><Bold>an italic bold\n                text</Bold> inside!</Italic></Block>\n        </React.Fragment>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {useLang} from \"@material-docs/core/hooks\";\nimport DocsPage from \"@material-docs/core/components/DocsPage/DocsPage\";\nimport {H1, H2, H3} from \"@material-docs/core/components\";\nimport DemoWithCode from \"@material-docs/core/components/DemoWithCode/DemoWithCode\";\nimport Box from \"@material-ui/core/Box\";\nimport TextStylingOverview from \"../../../examples/TextStyling/TextStylingOverview\";\nimport Markdown from \"@material-docs/core/components/Markdown/Markdown\";\nimport TextStylingNested from \"../../../examples/TextStyling/TextStylingNested\";\nimport List from \"@material-docs/core/components/List/List\";\nimport ListItem from \"@material-docs/core/components/ListItem/ListItem\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst overviewCode = `\nimport React from \"react\";\nimport Bold from \"@material-docs/core/components/Bold/Bold\";\nimport Italic from \"@material-docs/core/components/Italic/Italic\";\nimport Block from \"@material-docs/core/components/Block/Block\";\nimport CodeSpan from \"@material-docs/core/components/CodeSpan/CodeSpan\";\n\nexport default function TextStylingOverview() {\n    return(\n        <React.Fragment>\n            This is a <Bold>bold text</Bold> near <Italic>italic text</Italic> inside my line. <br/>\n            And me is <Italic><Bold>bold italic text</Bold></Italic>\n            <Block>I am text in <CodeSpan>{\"<Block/>\"}</CodeSpan> component. </Block>\n            Lets see on prev code line via inline code block\n            <CodeSpan>{\"<Block>I am text in <CodeSpan>{\\\\\"<Block/>\\\\\"}</CodeSpan> component. </Block>\"}</CodeSpan>\n        </React.Fragment>\n    );\n}\n`.trim();\n\nconst nestedCode = `\nimport React from \"react\";\nimport Bold from \"@material-docs/core/components/Bold/Bold\";\nimport Italic from \"@material-docs/core/components/Italic/Italic\";\nimport Block from \"@material-docs/core/components/Block/Block\";\nimport CodeSpan from \"@material-docs/core/components/CodeSpan/CodeSpan\";\n\nexport default function TextStylingNested() {\n    return (\n        <React.Fragment>\n            I <Bold> am an <Italic>italic text inside</Italic> bold component.</Bold><br/><br/>\n            <Block>I am a <CodeSpan>Block</CodeSpan> with <Italic><Bold>an italic bold text</Bold> inside!</Italic></Block>\n        </React.Fragment>\n    );\n}\n`.trim();\n\nexport default function TextStylingDemo() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TextDecoratorsDemo;\n    return (\n        <DocsPage\n            name={\"Text decorators\"}\n            searchLabel={\"Text decorators\"}\n            searchDescription={\"Text styling demonstration page.\"}\n            keys={[\"text\", \"styling\", \"decoration\", \"wrappers\", \"demo\"]}\n        >\n            <H1>Text decorators</H1>\n            <H3 noTag noDivider>{locale.pageAbout}</H3>\n            <Markdown>{locale.infoBlock1}</Markdown>\n            <DemoWithCode\n                paperContainer\n                code={overviewCode}\n                defaultExpanded\n                theme={\"darcula\"}\n                name={locale.overview}\n            >\n                <Box p={2}>\n                    <TextStylingOverview/>\n                </Box>\n            </DemoWithCode>\n            <H2>{locale.nesting}</H2>\n            <Markdown>{locale.nestingInfo}</Markdown>\n            <DemoWithCode\n                paperContainer\n                code={nestedCode}\n                theme={\"darcula\"}\n                name={locale.nestedComponents}\n            >\n                <Box p={2}>\n                    <TextStylingNested/>\n                </Box>\n            </DemoWithCode>\n            <H3>APIs</H3>\n            <List>\n                <ListItem><Link page={[\"Component APIs\", \"Bold\"]}>Bold</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"Block\"]}>Block</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"Italic\"]}>Italic</Link></ListItem>\n                <ListItem><Link page={[\"Component APIs\", \"CodeSpan\"]}>CodeSpan</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport Image from \"@material-docs/core/components/Image\";\nimport image from \"./images/GithubBannerWide.png\";\n\nexport default function ImagesOverview() {\n    return (\n        <Image src={image} alt={\"overview image\"} fullWidth/>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport {useLang} from \"@material-docs/core/hooks\";\nimport DocsPage from \"@material-docs/core/components/DocsPage/DocsPage\";\nimport {H1, H3} from \"@material-docs/core/components\";\nimport DemoWithCode from \"@material-docs/core/components/DemoWithCode/DemoWithCode\";\nimport Markdown from \"@material-docs/core/components/Markdown/Markdown\";\nimport ImagesOverview from \"../../../examples/Images/ImagesOverview\";\nimport List from \"@material-docs/core/components/List/List\";\nimport ListItem from \"@material-docs/core/components/ListItem/ListItem\";\nimport Link from \"@material-docs/core/components/Link/Link\";\n\nconst overviewCode = `\nimport React from \"react\";\nimport Image from \"@material-docs/core/components/Image/Image\";\nimport image from \"images/GithubBannerWide.png\"\n\nexport default function ImagesOverview() {\n    return (\n        <Image src={image} alt={\"overview image\"} fullWidth/>\n    );\n}\n`.trim();\n\nexport default function ImagesDemo() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.ImagesDemo;\n    return (\n        <DocsPage\n            name={\"Images\"}\n            searchLabel={\"Text decorators\"}\n            searchDescription={\"Text styling demonstration page.\"}\n            keys={[\"text\", \"styling\", \"decoration\", \"wrappers\", \"demo\"]}\n        >\n            <H1>Images</H1>\n            <H3 noTag noDivider>{locale.pageAbout}</H3>\n            <Markdown>{locale.infoBlock}</Markdown>\n            <DemoWithCode\n                code={overviewCode}\n                theme={\"darcula\"}\n                paperContainer\n            >\n                <ImagesOverview/>\n            </DemoWithCode>\n            <H3>APIs</H3>\n            <List>\n                <ListItem><Link page={[\"Component APIs\", \"Image\"]}>Image</Link></ListItem>\n            </List>\n        </DocsPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang, Link} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Tagable} from \"@material-docs/core\";\n// or\nimport Tagable from \"@material-docs/core/components/Tagable\";\n`.trim();\n\nexport default function TagableAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.TagableAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"TagableAPI\"}\n            searchTags={[\"header\", \"tag\", \"anchor\", \"api\", \"tagable\"]}\n            name={\"Tagable\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Headers\"]}>Headers</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang, Link} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {H1} from \"@material-docs/core\";\n// or\nimport H1 from \"@material-docs/core/components/H1\";\n`.trim();\n\nexport default function H1API() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.H1API;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"H1API\"}\n            searchTags={[\"h1\", \"header\", \"tag\", \"anchor\", \"api\"]}\n            name={\"H1\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Headers\"]}>Headers</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang, Link} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {H2} from \"@material-docs/core\";\n// or\nimport H2 from \"@material-docs/core/components/H2\";\n`.trim();\n\nexport default function H2API() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.H2API;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"H2API\"}\n            searchTags={[\"h2\", \"header\", \"tag\", \"anchor\", \"api\"]}\n            name={\"H2\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Headers\"]}>Headers</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang, Link} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {H3} from \"@material-docs/core\";\n// or\nimport H3 from \"@material-docs/core/components/H3\";\n`.trim();\n\nexport default function H3API() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.H3API;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"H3API\"}\n            searchTags={[\"h3\", \"header\", \"tag\", \"anchor\", \"api\"]}\n            name={\"H3\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Headers\"]}>Headers</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang, Link} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {H4} from \"@material-docs/core\";\n// or\nimport H4 from \"@material-docs/core/components/H3\";\n`.trim();\n\nexport default function H4API() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.H4API;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"H4API\"}\n            searchTags={[\"h4\", \"header\", \"tag\", \"anchor\", \"api\"]}\n            name={\"H4\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Headers\"]}>Headers</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang, Link} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {H5} from \"@material-docs/core\";\n// or\nimport H5 from \"@material-docs/core/components/H5\";\n`.trim();\n\nexport default function H5API() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.H5API;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"H5API\"}\n            searchTags={[\"h5\", \"header\", \"tag\", \"anchor\", \"api\"]}\n            name={\"H5\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Headers\"]}>Headers</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang, Link} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {H6} from \"@material-docs/core\";\n// or\nimport H6 from \"@material-docs/core/components/H6\";\n`.trim();\n\nexport default function H6API() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.H6API;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"H6API\"}\n            searchTags={[\"h6\", \"header\", \"tag\", \"anchor\", \"api\"]}\n            name={\"H6\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Headers\"]}>Headers</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\n\nimport {H2, List, ListItem, useLang, Link} from \"@material-docs/core\";\nimport ApiPage from \"../../../components/ApiPage\";\n\nconst importCode = `\nimport {Header} from \"@material-docs/core\";\n// or\nimport Header from \"@material-docs/core/components/Header\";\n`.trim();\n\nexport default function HeaderAPI() {\n    const {lang} = useLang();\n    const locale = lang.locale.pages.HeaderAPI;\n    const localeSpells = lang.locale.common.spells;\n    const componentAPILocale = lang.locale.common.ComponentAPI;\n\n    return (\n        <ApiPage\n            lang={lang}\n            localeName={\"HeaderAPI\"}\n            searchTags={[\"header\", \"tag\", \"anchor\", \"api\"]}\n            name={\"Header\"}\n            importCode={importCode}\n        >\n            <H2>Demos</H2>\n            <List>\n                <ListItem><Link page={[\"Components\", \"Headers\"]}>Headers</Link></ListItem>\n            </List>\n        </ApiPage>\n    );\n}","/*\n * Author: Andrieiev Danil |  danssg08@gmail.com | https://github.com/DanilAndreev\n * Copyright (C) 2020.\n */\n\nimport React from \"react\";\nimport logo from \"./logo.svg\";\nimport GitHubIcon from '@material-ui/icons/GitHub';\n// API pages\nimport DocsPageAPI from \"./pages/APIs/DocsPageAPI\";\nimport DemoWithCodeAPI from \"./pages/APIs/DemoWithCodeAPI\";\nimport CodeAPI from \"./pages/APIs/CodeAPI\";\nimport PagesGroupAPI from \"./pages/APIs/PagesGroupAPI\";\nimport ImageAPI from \"./pages/APIs/ImageAPI\";\nimport ListItemAPI from \"./pages/APIs/ListItemAPI\";\nimport ExpansionCodeAPI from \"./pages/APIs/ExpansionCodeAPI\";\nimport BlockAPI from \"./pages/APIs/BlockAPI\";\nimport CodeSpanAPI from \"./pages/APIs/CodeSpanAPI\";\nimport ItalicAPI from \"./pages/APIs/ItalicAPI\";\nimport ListAPI from \"./pages/APIs/ListAPI\";\nimport DocsMenuItemAPI from \"./pages/APIs/DocsMenuItemAPI\";\nimport MarkdownAPI from \"./pages/APIs/MarkdownAPI\";\nimport TableAPI from \"./pages/APIs/TableAPI\";\nimport TableRowAPI from \"./pages/APIs/TableRowAPI\";\nimport TableCellAPI from \"./pages/APIs/TableCellAPI\";\nimport TableBodyAPI from \"./pages/APIs/TableBodyAPI\";\nimport TableHeadAPI from \"./pages/APIs/TableHeadAPI\";\nimport BoldAPI from \"./pages/APIs/BoldAPI\";\nimport ListItemContainedAPI from \"./pages/APIs/ListItemContainedAPI\";\nimport DocsPagesAPI from \"./pages/APIs/DocsPagesAPI\";\nimport DocsMenuAPI from \"./pages/APIs/DocsMenuAPI\";\nimport DocsLayoutAPI from \"./pages/APIs/DocsLayoutAPI\";\n\nimport AutoDocsMenuAPI from \"./pages/APIs/AutoDocsMenuAPI\";\nimport LanguageSelectorAPI from \"./pages/APIs/LanguageSelectorAPI\";\nimport SearchFieldAPI from \"./pages/APIs/SearchFieldAPI\";\n\n\nimport {DocsLayout, DocsPages, PagesGroup} from \"@material-docs/core\";\n\nimport RU from \"./locale/RU.json\";\nimport EN from \"./locale/EN.json\";\nimport ListsDemo from \"./pages/Components/ListsDemo\";\nimport Installation from \"./pages/GettingStarted/Installation\";\nimport LayoutDemo from \"./pages/Components/LayoutDemo\";\nimport DocsMenu from \"@material-docs/core/components/DocsMenu/DocsMenu\";\nimport AutoDocsMenu from \"@material-docs/core/components/AutoDocsMenu/AutoDocsMenu\";\nimport Landing from \"@material-docs/core/components/Landing/Landing\";\nimport MaterialDocsLanding from \"./pages/MaterialDocsLanding\";\nimport CreatingMaterialDocs from \"./pages/Tutorials/CreatingMaterialDocs\";\nimport HeadersDemo from \"./pages/Components/HeadersDemo\";\nimport MarkdownDemo from \"./pages/Components/MarkdownDemo\";\nimport TextStylingDemo from \"./pages/Components/TextStylingDemo\";\nimport ImagesDemo from \"./pages/Components/ImagesDemo\";\nimport TagableAPI from \"./pages/APIs/TagableAPI\";\nimport H1API from \"./pages/APIs/H1API\";\nimport H2API from \"./pages/APIs/H2API\";\nimport H3API from \"./pages/APIs/H3API\";\nimport H4API from \"./pages/APIs/H4API\";\nimport H5API from \"./pages/APIs/H5API\";\nimport H6API from \"./pages/APIs/H6API\";\nimport HeaderAPI from \"./pages/APIs/HeaderAPI\";\n\n\nexport default function Documentation() {\n    return (\n        <DocsLayout\n            defaultLang={EN}\n            langs={[EN, RU]}\n            basename={process.env.PUBLIC_URL}\n            name={\"Material Docs\"}\n            logo={logo}\n            description={\"material-docs - react framework for easy creating documentation site in material design style.\"}\n            keywords={[\n                \"material-design\",\n                \"material-ui\",\n                \"documentation\",\n                \"documentation-tool\",\n                \"framework\",\n                \"components-library\",\n                \"markdown\",\n                \"markdown-converter\"\n            ]}\n            version={\"1.0.0\"}\n            actions={[\n                {\n                    icon: <GitHubIcon/>,\n                    link: \"https://github.com/DanilAndreev/material-docs\",\n                    tooltip: \"Github source code\"\n                }\n            ]}\n        >\n            <DocsMenu dense>\n                <AutoDocsMenu/>\n            </DocsMenu>\n            <Landing>\n                <MaterialDocsLanding/>\n            </Landing>\n            <DocsPages>\n                <PagesGroup name={\"Getting started\"}>\n                    <Installation/>\n                </PagesGroup>\n                <PagesGroup name={\"Components\"}>\n                    <ListsDemo/>\n                    <LayoutDemo/>\n                    <HeadersDemo/>\n                    <MarkdownDemo/>\n                    <TextStylingDemo/>\n                    <ImagesDemo/>\n                </PagesGroup>\n                <PagesGroup name={\"Component APIs\"}>\n                    <DocsLayoutAPI/>\n                    <DocsPageAPI/>\n                    <DemoWithCodeAPI/>\n                    <CodeAPI/>\n                    <PagesGroupAPI/>\n                    <ImageAPI/>\n                    <ListItemAPI/>\n                    <ExpansionCodeAPI/>\n                    <BlockAPI/>\n                    <CodeSpanAPI/>\n                    <ItalicAPI/>\n                    <BoldAPI/>\n                    <ListAPI/>\n                    <DocsMenuItemAPI/>\n                    <MarkdownAPI/>\n                    <TableAPI/>\n                    <TableRowAPI/>\n                    <TableCellAPI/>\n                    <TableBodyAPI/>\n                    <TableHeadAPI/>\n                    <ListItemContainedAPI/>\n                    <DocsPagesAPI/>\n                    <DocsMenuAPI/>\n                    <H1API/>\n                    <H2API/>\n                    <H3API/>\n                    <H4API/>\n                    <H5API/>\n                    <H6API/>\n                    <HeaderAPI/>\n                    <AutoDocsMenuAPI/>\n                    <PagesGroup name={\"System components\"}>\n                        <LanguageSelectorAPI/>\n                        <SearchFieldAPI/>\n                        <TagableAPI/>\n                    </PagesGroup>\n                </PagesGroup>\n                <PagesGroup name={\"Tutorials\"}>\n                    <CreatingMaterialDocs/>\n                </PagesGroup>\n            </DocsPages>\n        </DocsLayout>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport Documentation from \"./Documentation\";\nimport \"./index.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Documentation/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5a237c82.svg\";","module.exports = __webpack_public_path__ + \"static/media/MaterialDocsLogoOverview.cbed2f78.svg\";","module.exports = __webpack_public_path__ + \"static/media/back1_v002.7777758f.png\";","module.exports = __webpack_public_path__ + \"static/media/demo-screenshot-mobile.9819c91f.png\";","module.exports = __webpack_public_path__ + \"static/media/demo-screenshot-desktop-1.467a5a60.png\";","module.exports = __webpack_public_path__ + \"static/media/demo-screenshot-desktop-2.a532e237.png\";","module.exports = __webpack_public_path__ + \"static/media/GithubBannerWide.6818bd3f.png\";"],"sourceRoot":""}